{"version":3,"sources":["componnents/ContactForm/ContactForm.module.css","componnents/ContactForm/ContactForm.js","componnents/ContactList/ContactListItem/ContactListItem.js","componnents/ContactList/ContactList.js","componnents/Filter/Filter.js","App.js","index.js","componnents/ContactList/ContactListItem/ContactListItem.module.css","componnents/Filter/Filter.module.css","App.module.css"],"names":["module","exports","ContactForm","state","name","number","onInputValue","e","target","value","setState","onSubmitContact","preventDefault","props","onAddContact","this","onSubmit","className","ContactFormStl","id","uuid4","label","type","onChange","input","buttonSubmit","Component","ContactListItem","contact","onRemove","ContactListItemStl","container","contactInfo","action","onClick","ContactsList","visibleContacts","onRemoveItem","ContactListStl","contactList","map","visibleContact","Filter","filter","onChangeFilter","FilterStl","filterContainer","defaultContacts","App","useState","JSON","parse","window","localStorage","getItem","contacts","setContacts","useEffect","setItem","stringify","setFilter","AppStl","heading","some","alert","length","toLocaleLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a378c940.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1HzrQ\",\"label\":\"ContactForm_label__2K1N7\",\"input\":\"ContactForm_input__2Ofd4\",\"buttonSubmit\":\"ContactForm_buttonSubmit__1lUXL\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid4 } from 'uuid';\nimport ContactFormStl from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onInputValue = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitContact = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.onAddContact(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form\n        onSubmit={this.onSubmitContact}\n        className={ContactFormStl.ContactForm}\n        id={uuid4()}\n      >\n        <label className={ContactFormStl.label}>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={this.onInputValue}\n            name=\"name\"\n            className={ContactFormStl.input}\n          />\n        </label>\n        <label className={ContactFormStl.label}>\n          Phone Number\n          <input\n            type=\"text\"\n            value={number}\n            onChange={this.onInputValue}\n            name=\"number\"\n            className={ContactFormStl.input}\n          />\n        </label>\n        <button type=\"submit\" className={ContactFormStl.buttonSubmit}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport ContactListItemStl from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact, onRemove }) {\n  const { name, number } = contact;\n  return (\n    <li className={ContactListItemStl.container}>\n      <div className={ContactListItemStl.contactInfo}>\n        {name} : {number}\n      </div>\n      <section className={ContactListItemStl.action}>\n        <button type=\"button\" onClick={onRemove}>\n          Delete\n        </button>\n      </section>\n    </li>\n  );\n}\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem/ContactListItem';\nimport ContactListStl from './ContactListItem/ContactListItem.module.css';\n\nfunction ContactsList({ visibleContacts, onRemoveItem }) {\n  return (\n    <ul className={ContactListStl.contactList}>\n      {visibleContacts.map(visibleContact => (\n        <ContactListItem\n          contact={visibleContact}\n          onRemove={() => onRemoveItem(visibleContact.id)}\n          key={visibleContact.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n\n  onRemoveItem: PropTypes.func.isRequired,\n};\nexport default ContactsList;\n","import PropTypes from 'prop-types';\nimport FilterStl from './Filter.module.css';\n\nfunction Filter({ filter, onChangeFilter }) {\n  return (\n    <div className={FilterStl.filterContainer}>\n      <label className={FilterStl.label}>\n        Find contact by name:\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n          name=\"filter\"\n          className={FilterStl.input}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuid4 } from 'uuid';\nimport ContactForm from './componnents/ContactForm/ContactForm';\nimport ContactsList from './componnents/ContactList/ContactList';\nimport Filter from './componnents/Filter/Filter';\nimport AppStl from './App.module.css';\n\nconst defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts\n    );\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    setContacts(contacts => {\n      const contact = {\n        id: uuid4(),\n        name,\n        number,\n      };\n      return [...contacts, contact];\n    });\n  };\n\n  const removeContact = contactId => {\n    setContacts(contacts.filter(({ id }) => id !== contactId));\n  };\n\n  const [filter, setFilter] = useState('');\n\n  const onInputFilter = e => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  const getVisibleContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  return (\n    <div className={AppStl.container}>\n      <h2 className={AppStl.heading}>PhoneBook</h2>\n\n      <ContactForm onAddContact={addContact} />\n\n      <h2 className={AppStl.heading}>Contacts</h2>\n\n      {contacts.length > 1 && (\n        <Filter filter={filter} onChangeFilter={onInputFilter} />\n      )}\n\n      {contacts.length > 0 && (\n        <ContactsList\n          visibleContacts={getVisibleContacts(contacts, filter)}\n          onRemoveItem={removeContact}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__3LLTW\",\"contactInfo\":\"ContactListItem_contactInfo__3J3gO\",\"action\":\"ContactListItem_action__1LjS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__3uwo2\",\"input\":\"Filter_input__3MbzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__21Z-2\",\"heading\":\"App_heading__2UJZy\"};"],"sourceRoot":""}